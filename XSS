反射型xss
反射型XSS是服务器后端处理时把处理不当的⽤户输⼊输出到⽹⻚ 导致⽤户浏览器执⾏恶意代码
<?php
echo 'Hello '.$_GET['name'].'!';

正常输⼊: ?name=cz
服务器返回 Hello cz!
浏览器渲染纯⽂本 Hello cz!
攻击者输⼊: ?name=<script type="text/javascript">alert('XSS!');</script>
服务器返回 Hello <script type="text/javascript">alert('XSS!');</script>!
浏览器渲染 Hello ! script被作为html标签解析 执⾏其中的代码 弹出警告框XSS!

此种漏洞⽐较明显 很容易分析问题的存在
审计时注意 PHP常使⽤ htmlspecialchars 和 htmlentities函数 转义⽤户的输⼊作为防护

储存型XSS
将服务器储存的处理不当的⽤户输⼊输出到⽹⻚ 导致⽤户浏览器执⾏恶意代码
攻击者输⼊->服务器储存 攻击者得到⼀个返回储存值的⻚⾯
被害者请求⻚⾯->服务器调⽤储存并输出->XSS
常⻅于评论 留⾔ ⽂章 等
该漏洞需要同时联合查看储存与输出 有时业务复杂 多写⼊点 多输出点 不易发现
⽐如 发布评论 攻击者发布带有恶意代码的评论 被害者访问评论展示⻚⾯ 触发XSS 后台管理员审核评论
时 触发XSS
再⽐如 ⽤户系统设置昵称时 攻击者将昵称写⼊数据库 在评论显示时读取数据库值输出⽤户昵称

DOM型 XSS
纯dom
储存(反射)dom
DOM型 XSS 只与浏览器前端DOM渲染有关 不做赘述

攻击者修改前端引⽤的⽂件链接 引⽤外部⽹站⽂件
常⻅于⽤户头像 ⽂章/评论图⽚等
被害者访问到攻击者个⼈⻚⾯ ⽂章 评论 聊天内容时会访问远程图⽚⽂件
这可能会使攻击者获取到访问者的ip 浏览器 系统等信息
也可以绕过内容审查 在审查通过后动态替换⽂件内容(hsbc⼴告等信息)
解决⽅法:正则匹配限制url域名

防护
后端过滤
服务端返回HTTP头 添加内容安全策略 content-security-policy 头
正确设置安全策略可以有效减少未知XSS/html外部⽂件引⽤漏洞产⽣的危害
COOKIES添加Httponly属性 防⽌使⽤js读取⽤户cookies (js发起表单仍可携带cookies)
